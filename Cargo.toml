[package]
authors = ["Sean Bowe <ewillbefull@gmail.com>", "Alex Vlasov <alex.m.vlasov@gmail.com>", "Alex Gluchowski <alex@gluchowski.net"]
description = "zk-SNARK library"
documentation = "https://github.com/matter-labs/bellman"
homepage = "https://github.com/matter-labs/bellman"
license = "MIT/Apache-2.0"
name = "bellman_ce"
repository = "https://github.com/matter-labs/bellman"
version = "0.3.2"
edition = "2018"

[lib]
crate-type = ["cdylib", "lib", "staticlib"]

[dependencies]
rand = "0.4"
bit-vec = "0.6"
cfg-if = "1.*"
itertools = "*"

pairing = {package = "pairing_ce", version = "0.26.*" }
# pairing = {package = "pairing_ce", path = "../pairing"}
byteorder = "1"

futures = {package = "futures", version = "0.3", default_features = false, features = ["executor"]}
futures-locks = "0.6"
pin-project = "1"
num_cpus = "1"
crossbeam = {version = "0.8", optional = true}
prefetch = {version = "0.2", optional = true}

web-sys = {version = "0.3", optional = true, features = ["console", "Performance", "Window"]}

tiny-keccak = {version = "1.5", optional = true}
blake2-rfc = {version = "0.2.18", optional = true}

blake2s_simd = {version = "0.5"}
lazy_static = {version = "1", optional = true}

blake2s_const = {version = "0.6", optional = true, path = "./src/plonk/blake2_const/blake2s/"}
heavy-ops-service = {path = "../heavy-ops-service/service", optional = true}
new_polynomials = {path = "../heavy-ops-service/polynomials", package = "polynomials", optional = true}

# rescue_hash = {git = "https://github.com/shamatar/rescue_hash.git", optional = true }
# rescue_hash = {path = "../rescue_hash", optional = true }
# poseidon_hash = {path = "../poseidon_hash", optional = true }

hex = "*"

[features]
default = ["multicore", "plonk", "async_prover"]
multicore = ["crossbeam", "futures/thread-pool"]
nolog = []
plonk = ["lazy_static", "tiny-keccak", "blake2s_const"]
# redshift = ["plonk", "rescue_hash", "poseidon_hash"]
wasm = ["web-sys"]
asm = ["pairing/asm"]
async_prover = ["fallback_cpu_prover"]
fpga_prover = ["heavy-ops-service/fpga", "new_polynomials"]
gpu_prover = ["heavy-ops-service/gpu", "new_polynomials"]
fallback_cpu_prover = ["heavy-ops-service", "new_polynomials"]

